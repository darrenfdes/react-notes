{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NotesList.js","components/Search.js","components/Header.js","App.js","index.js"],"names":["Note","props","className","text","date","size","onClick","handleDeleteNote","id","AddNote","useState","noteText","setNoteText","rows","cols","placeholder","value","onChange","event","target","length","trim","handleAddNote","NotesList","notes","map","note","Search","handleSearchNote","type","Header","handleToggleDarkMode","previousDarkMode","App","setNotes","searchText","setSearchText","localStorage","getItem","darkMode","setDarkMode","useEffect","savedNotes","JSON","parse","setItem","stringify","filter","toLowerCase","includes","Date","newNote","nanoid","toLocaleDateString","newNotes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAkBeA,EAhBF,SAACC,GACZ,OACE,sBAAKC,UAAU,OAAf,UACE,+BAAOD,EAAME,OACb,sBAAKD,UAAU,cAAf,UACE,gCAAQD,EAAMG,OACd,cAAC,IAAD,CACEF,UAAU,cACVG,KAAK,QACLC,QAAS,kBAAML,EAAMM,iBAAiBN,EAAMO,cC4BvCC,EArCC,SAACR,GACf,MAAgCS,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAiBA,OACE,sBAAKV,UAAU,WAAf,UACE,0BACEW,KAAK,IACLC,KAAK,KACLC,YAAY,wBACZC,MAAOL,EACPM,SApBe,SAACC,GAFC,IAGAA,EAAMC,OAAOH,MAAMI,QAAU,GAChDR,EAAYM,EAAMC,OAAOH,UAoBzB,sBAAKd,UAAU,cAAf,UACE,kCAzBiB,IAyBQS,EAASS,OAAlC,gBACA,wBAAQlB,UAAU,OAAOI,QAlBP,WAClBK,EAASU,OAAOD,OAAS,IAC3BnB,EAAMqB,cAAcX,GACpBC,EAAY,MAeV,yBCXOW,EAjBG,SAACtB,GACjB,OACE,sBAAKC,UAAU,aAAf,UACGD,EAAMuB,MAAMC,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEElB,GAAIkB,EAAKlB,GACTL,KAAMuB,EAAKvB,KACXC,KAAMsB,EAAKtB,KACXG,iBAAkBN,EAAMM,kBAJnBmB,EAAKlB,OAOd,cAAC,EAAD,CAASc,cAAerB,EAAMqB,oB,OCArBK,EAbA,SAAC1B,GACd,OACE,sBAAKC,UAAU,SAAf,UACE,cAAC,IAAD,CAAUA,UAAU,eAAeG,KAAK,UACxC,uBACEY,SAAU,SAACC,GAAD,OAAWjB,EAAM2B,iBAAiBV,EAAMC,OAAOH,QACzDa,KAAK,OACLd,YAAY,0BCOLe,EAhBA,SAAC7B,GACd,OACE,sBAAKC,UAAU,SAAf,UACE,uCACA,wBACEI,QAAS,kBACPL,EAAM8B,sBAAqB,SAACC,GAAD,OAAuBA,MAEpD9B,UAAU,OAJZ,6BC2DS+B,EAzDH,WACV,MAA0BvB,mBAAS,IAAnC,mBAAOc,EAAP,KAAcU,EAAd,KAEA,EAAoCxB,mBAAS,IAA7C,mBAAOyB,EAAP,KAAmBC,EAAnB,KAEA,EAAgC1B,mBAAS2B,aAAaC,QAAQ,cAA9D,mBAAOC,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACR,IAAMC,EAAaC,KAAKC,MAAMP,aAAaC,QAAQ,yBAE/CI,GACFR,EAASQ,KAEV,IAEHD,qBAAU,WACRJ,aAAaQ,QAAQ,uBAAwBF,KAAKG,UAAUtB,IAC5Da,aAAaQ,QAAQ,YAAaN,KACjC,CAACf,EAAOe,IAsBX,OACE,qBAAKrC,UAAS,UAAKqC,GAAY,aAA/B,SACE,sBAAKrC,UAAU,YAAf,UACE,cAAC,EAAD,CAAQ6B,qBAAsBS,IAC9B,cAAC,EAAD,CAAQZ,iBAAkBQ,IAC1B,cAAC,EAAD,CACEZ,MAAOA,EAAMuB,QAAO,SAACrB,GAAD,OAClBA,EAAKvB,KAAK6C,cAAcC,SAASd,MAEnCb,cAzBQ,SAACnB,GACf,IAAMC,EAAO,IAAI8C,KACXC,EAAU,CACd3C,GAAI4C,cACJjD,KAAMA,EACNC,KAAMA,EAAKiD,sBAEPC,EAAQ,sBAAO9B,GAAP,CAAc2B,IAC5BjB,EAASoB,IAkBH/C,iBAfW,SAACC,GAClB,IAAM8C,EAAW9B,EAAMuB,QAAO,SAACrB,GAAD,OAAUA,EAAKlB,KAAOA,KACpD0B,EAASoB,YCtCbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3201c827.chunk.js","sourcesContent":["import { MdDeleteForever } from \"react-icons/md\";\n\nconst Note = (props) => {\n  return (\n    <div className=\"note\">\n      <span>{props.text}</span>\n      <div className=\"note-footer\">\n        <small>{props.date}</small>\n        <MdDeleteForever\n          className=\"delete-icon\"\n          size=\"1.3em\"\n          onClick={() => props.handleDeleteNote(props.id)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Note;\n","import { useState } from \"react\";\n\nconst AddNote = (props) => {\n  const [noteText, setNoteText] = useState(\"\");\n\n  const characterLimit = 200;\n\n  const handleChange = (event) => {\n    if (characterLimit - event.target.value.length >= 0) {\n      setNoteText(event.target.value);\n    }\n  };\n\n  const handleSaveClick = () => {\n    if (noteText.trim().length > 0) {\n      props.handleAddNote(noteText);\n      setNoteText(\"\");\n    }\n  };\n\n  return (\n    <div className=\"note new\">\n      <textarea\n        rows=\"8\"\n        cols=\"10\"\n        placeholder=\"Type to add a note...\"\n        value={noteText}\n        onChange={handleChange}\n      ></textarea>\n      <div className=\"note-footer\">\n        <small>{characterLimit - noteText.length} Remaining</small>\n        <button className=\"save\" onClick={handleSaveClick}>\n          Save\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddNote;\n","import Note from \"./Note\";\nimport AddNote from \"./AddNote\";\n\nconst NotesList = (props) => {\n  return (\n    <div className=\"notes-list\">\n      {props.notes.map((note) => (\n        <Note\n          key={note.id}\n          id={note.id}\n          text={note.text}\n          date={note.date}\n          handleDeleteNote={props.handleDeleteNote}\n        />\n      ))}\n      <AddNote handleAddNote={props.handleAddNote} />\n    </div>\n  );\n};\n\nexport default NotesList;\n","import { MdSearch } from \"react-icons/md\";\n\nconst Search = (props) => {\n  return (\n    <div className=\"search\">\n      <MdSearch className=\"search-icons\" size=\"1.3em\" />\n      <input\n        onChange={(event) => props.handleSearchNote(event.target.value)}\n        type=\"text\"\n        placeholder=\"type to search...\"\n      />\n    </div>\n  );\n};\n\nexport default Search;\n","const Header = (props) => {\n  return (\n    <div className=\"header\">\n      <h1>Notes</h1>\n      <button\n        onClick={() =>\n          props.handleToggleDarkMode((previousDarkMode) => !previousDarkMode)\n        }\n        className=\"save\"\n      >\n        Toggle Mode\n      </button>\n    </div>\n  );\n};\n\nexport default Header;\n","import NotesList from \"./components/NotesList\";\nimport { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n\n  const [searchText, setSearchText] = useState(\"\");\n\n  const [darkMode, setDarkMode] = useState(localStorage.getItem(\"dark-mode\"));\n\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem(\"react-notes-app-data\"));\n\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"react-notes-app-data\", JSON.stringify(notes));\n    localStorage.setItem(\"dark-mode\", darkMode);\n  }, [notes, darkMode]);\n\n  // useEffect(() => {\n  //   localStorage.setItem(\"dark-mode\", darkMode);\n  // }, [darkMode]);\n\n  const addNote = (text) => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString(),\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id);\n    setNotes(newNotes);\n  };\n\n  return (\n    <div className={`${darkMode && \"dark-mode\"}`}>\n      <div className=\"container\">\n        <Header handleToggleDarkMode={setDarkMode} />\n        <Search handleSearchNote={setSearchText} />\n        <NotesList\n          notes={notes.filter((note) =>\n            note.text.toLowerCase().includes(searchText)\n          )}\n          handleAddNote={addNote}\n          handleDeleteNote={deleteNote}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}